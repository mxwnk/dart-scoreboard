generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model Player {
  id   String @id @default(cuid())
  name String

  games Game[]

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  Turn      Turn[]
}

model Game {
  id String @id @default(cuid())

  players Player[]
  turns   Turn[]

  startpoints Int

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
}

model Turn {
  id         Int     @id @default(autoincrement())
  throws     Throw[]
  overthrown Boolean

  player   Player @relation(fields: [playerId], references: [id])
  playerId String

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String
}

model Throw {
  id     Int   @id @default(autoincrement())
  score  Int
  ring   Ring?
  turn   Turn  @relation(fields: [turnId], references: [id])
  turnId Int
}

enum Ring {
  D
  T
}